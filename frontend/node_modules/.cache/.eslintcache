[{"C:\\Users\\tiago\\Documents\\CODES\\portfolio\\Farmacia\\copia\\frontend\\src\\index.js":"1","C:\\Users\\tiago\\Documents\\CODES\\portfolio\\Farmacia\\copia\\frontend\\src\\App.js":"2","C:\\Users\\tiago\\Documents\\CODES\\portfolio\\Farmacia\\copia\\frontend\\src\\components\\Home.js":"3","C:\\Users\\tiago\\Documents\\CODES\\portfolio\\Farmacia\\copia\\frontend\\src\\components\\Faqs.js":"4","C:\\Users\\tiago\\Documents\\CODES\\portfolio\\Farmacia\\copia\\frontend\\src\\components\\NavBar.js":"5","C:\\Users\\tiago\\Documents\\CODES\\portfolio\\Farmacia\\copia\\frontend\\src\\components\\Form.js":"6","C:\\Users\\tiago\\Documents\\CODES\\portfolio\\Farmacia\\copia\\frontend\\src\\components\\Marcacao.js":"7"},{"size":219,"mtime":1613055977814,"results":"8","hashOfConfig":"9"},{"size":787,"mtime":1613688710221,"results":"10","hashOfConfig":"9"},{"size":2383,"mtime":1614002912021,"results":"11","hashOfConfig":"9"},{"size":112,"mtime":1612974327996,"results":"12","hashOfConfig":"9"},{"size":580,"mtime":1614002489432,"results":"13","hashOfConfig":"9"},{"size":6402,"mtime":1614003302653,"results":"14","hashOfConfig":"9"},{"size":5889,"mtime":1613929426934,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"x4ocfr",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"18"},"C:\\Users\\tiago\\Documents\\CODES\\portfolio\\Farmacia\\copia\\frontend\\src\\index.js",[],["32","33"],"C:\\Users\\tiago\\Documents\\CODES\\portfolio\\Farmacia\\copia\\frontend\\src\\App.js",[],"C:\\Users\\tiago\\Documents\\CODES\\portfolio\\Farmacia\\copia\\frontend\\src\\components\\Home.js",[],"C:\\Users\\tiago\\Documents\\CODES\\portfolio\\Farmacia\\copia\\frontend\\src\\components\\Faqs.js",[],"C:\\Users\\tiago\\Documents\\CODES\\portfolio\\Farmacia\\copia\\frontend\\src\\components\\NavBar.js",[],"C:\\Users\\tiago\\Documents\\CODES\\portfolio\\Farmacia\\copia\\frontend\\src\\components\\Form.js",[],"C:\\Users\\tiago\\Documents\\CODES\\portfolio\\Farmacia\\copia\\frontend\\src\\components\\Marcacao.js",["34"],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst Marcacao = () => {\r\n  const [teste, setTeste] = useState({});\r\n  const [urlID, seturlID] = useState(\"\");\r\n  const [hours, setHours] = useState([], console.log(\"hello\"));\r\n\r\n  //09:20 ate as 16:40\r\n  const availableHours = [\r\n    \"09:20\",\r\n    \"09:40\",\r\n    \"10:00\",\r\n    \"10:20\",\r\n    \"10:40\",\r\n    \"11:00\",\r\n    \"11:20\",\r\n    \"11:40\",\r\n    \"12:00\",\r\n    \"12:20\",\r\n    \"12:40\",\r\n    \"13:00\",\r\n    \"13:20\",\r\n    \"13:40\",\r\n    \"14:00\",\r\n    \"14:20\",\r\n    \"14:40\",\r\n    \"15:00\",\r\n    \"15:20\",\r\n    \"15:40\",\r\n    \"16:00\",\r\n    \"16:20\",\r\n    \"16:40\",\r\n  ];\r\n\r\n  useEffect(() => {\r\n    getIndMarc();\r\n  }, []);\r\n\r\n  const getIndMarc = async () => {\r\n    const url = window.location.href;\r\n\r\n    const id = url.replace(\"http://localhost:3000/marcacao/\", \"\");\r\n\r\n    seturlID(id);\r\n\r\n    await axios.get(`http://localhost:5000/marcacoes/${id}`).then((res) => {\r\n      setTeste({\r\n        ...teste,\r\n        name: res.data.name,\r\n        age: res.data.age,\r\n        contact: res.data.contact,\r\n        reason: res.data.reason,\r\n        date: res.data.date,\r\n        hour: res.data.hour,\r\n      });\r\n    });\r\n  };\r\n\r\n  //events handlers\r\n  const handleChange = (e) => {\r\n    const name = e.target.name;\r\n    const value = e.target.value;\r\n\r\n    setTeste({ ...teste, [name]: value });\r\n  };\r\n  ////////// //////////\r\n  const handleDate = (e) => {\r\n    const name = e.target.name;\r\n    const value = e.target.value;\r\n\r\n    axios.get(\"http://localhost:5000/marcacoes\").then((res) => {\r\n      const marcacoes = res.data;\r\n\r\n      const diaMarcacao = marcacoes.filter((data) => data.date === value);\r\n\r\n      const horasIndisp = [];\r\n      let horasDisp = [];\r\n\r\n      diaMarcacao.map((hour) => horasIndisp.push(hour.hour));\r\n\r\n      horasDisp = availableHours.filter((e) => !horasIndisp.includes(e));\r\n\r\n      setHours(horasDisp);\r\n      setTeste({ ...teste, [name]: value });\r\n    });\r\n  };\r\n\r\n  const handleSintomas = (e) => {\r\n    const value = e.target.value;\r\n\r\n    setTeste({ ...teste, reason: value });\r\n  };\r\n\r\n  const handleHours = (e) => {\r\n    const value = e.target.value;\r\n\r\n    setTeste({ ...teste, hour: value });\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const newTeste = { ...teste };\r\n\r\n    if (teste.name === \"\") {\r\n      alert(\"name nao pode estar vazio\");\r\n      return false;\r\n    } else if (teste.age === \"\") {\r\n      alert(\"idade nao pode estar vazio\");\r\n      return false;\r\n    } else if (teste.contact === \"\") {\r\n      alert(\"contacto nao pode estar vazio\");\r\n      return false;\r\n    } else if (teste.reason === \"\") {\r\n      alert(\"Motivo nao pode estar vazio\");\r\n      return false;\r\n    } else if (teste.date === \"\") {\r\n      alert(\"Data nao pode estar vazio\");\r\n      return false;\r\n    } else if (teste.hour === \"\") {\r\n      alert(\"hora nao pode estar vazio\");\r\n      return false;\r\n    } else {\r\n      axios\r\n        .post(`http://localhost:5000/marcacoes/${urlID}`, newTeste)\r\n        .then((res) => {\r\n          console.log(res);\r\n        })\r\n        .catch((err) => console.log(err));\r\n    }\r\n\r\n    setTeste({\r\n      name: \"\",\r\n      age: \"\",\r\n      contact: \"\",\r\n      reason: \"\",\r\n      hour: \"\",\r\n      date: new Date(),\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"form-group\">\r\n        <form>\r\n          <div className=\"form-element\">\r\n            <label htmlFor=\"name\">Nome</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"name\"\r\n              name=\"name\"\r\n              value={teste.name}\r\n              onChange={handleChange}\r\n              placeholder={teste.name}\r\n            />\r\n          </div>\r\n          <div className=\"form-element\">\r\n            <label htmlFor=\"age\">Idade</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"age\"\r\n              name=\"age\"\r\n              value={teste.age}\r\n              onChange={handleChange}\r\n            />\r\n          </div>\r\n          <div className=\"form-element\">\r\n            <label htmlFor=\"contact\">Contacto</label>\r\n            <input\r\n              type=\"tel\"\r\n              pattern=\"[0-9]{9}\"\r\n              id=\"contact\"\r\n              name=\"contact\"\r\n              value={teste.contact}\r\n              onChange={handleChange}\r\n              required\r\n            />\r\n          </div>\r\n\r\n          <div className=\"form-element\">\r\n            <label htmlFor=\"reason\">Motivo</label>\r\n            <select onChange={handleSintomas} id=\"validationCustom04\" required>\r\n              <option selected disabled value=\"\">\r\n                Escolha o Motivo\r\n              </option>\r\n              <option name=\"reason\">Sintomas</option>\r\n              <option name=\"reason\">Contacto Proximo</option>\r\n            </select>\r\n          </div>\r\n\r\n          <div className=\"form-element\">\r\n            <label htmlFor=\"date\">Data</label>\r\n            <input\r\n              type=\"date\"\r\n              id=\"date\"\r\n              name=\"date\"\r\n              value={teste.date}\r\n              onChange={handleDate}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"form-element\">\r\n            <label htmlFor=\"hours\">Horas</label>\r\n            <select id=\"hours\" onChange={handleHours}>\r\n              <option defaultValue selected disabled>\r\n                Escolha uma hora\r\n              </option>\r\n              {hours.map((hour) => {\r\n                return (\r\n                  <option key={hour} value={hour}>\r\n                    {hour}\r\n                  </option>\r\n                );\r\n              })}\r\n            </select>\r\n          </div>\r\n\r\n          <div className=\"btn-container\">\r\n            <button className=\"button\" type=\"submit\" onClick={handleSubmit}>\r\n              Confirmar Marcação\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Marcacao;\r\n",{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","severity":1,"message":"40","line":38,"column":6,"nodeType":"41","endLine":38,"endColumn":8,"suggestions":"42"},"no-native-reassign",["43"],"no-negated-in-lhs",["44"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getIndMarc'. Either include it or remove the dependency array.","ArrayExpression",["45"],"no-global-assign","no-unsafe-negation",{"desc":"46","fix":"47"},"Update the dependencies array to be: [getIndMarc]",{"range":"48","text":"49"},[689,691],"[getIndMarc]"]